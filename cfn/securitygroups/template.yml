---
AWSTemplateFormatVersion: '2010-09-09'
Description: kubernetes security groups

Parameters:
  VpcName:
    Description: The environment name to associate resources with
    Type: String
  ClusterName:
    Description: The name of the cluster to which I belong
    Type: String

Resources:

  ControlPlaneSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Cluster communication with worker nodes
      VpcId: 
        Fn::ImportValue:
          !Sub KubeClusterVpcId-${VpcName}
      Tags:
        - Key: Name
          Value: !Sub kube-controlplane-${ClusterName}

  NodeSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for all nodes in the cluster
      VpcId: 
        Fn::ImportValue:
          !Sub KubeClusterVpcId-${VpcName}
      Tags:
        - Key: !Sub "kubernetes.io/cluster/${ClusterName}"
          Value: 'owned'
        - Key: Name
          Value: !Sub kube-node-${ClusterName}

  DataSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for RDS instances
      VpcId: 
        Fn::ImportValue:
          !Sub KubeClusterVpcId-${VpcName}
      Tags:
        - Key: Name
          Value: !Sub kube-data-${ClusterName}

  NodeSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    DependsOn: NodeSecurityGroup
    Properties:
      Description: Allow node to communicate with each other
      GroupId: !Ref NodeSecurityGroup
      SourceSecurityGroupId: !Ref NodeSecurityGroup
      IpProtocol: '-1'
      FromPort: 0
      ToPort: 65535

  NodeSecurityGroupFromControlPlaneIngress:
    Type: AWS::EC2::SecurityGroupIngress
    DependsOn: NodeSecurityGroup
    Properties:
      Description: Allow worker Kubelets and pods to receive communication from the cluster control plane
      GroupId: !Ref NodeSecurityGroup
      SourceSecurityGroupId: !Ref ControlPlaneSecurityGroup
      IpProtocol: tcp
      FromPort: 1025
      ToPort: 65535

  ControlPlaneEgressToNodeSecurityGroup:
    Type: AWS::EC2::SecurityGroupEgress
    DependsOn: NodeSecurityGroup
    Properties:
      Description: Allow the cluster control plane to communicate with worker Kubelet and pods
      GroupId: !Ref ControlPlaneSecurityGroup
      DestinationSecurityGroupId: !Ref NodeSecurityGroup
      IpProtocol: tcp
      FromPort: 1025
      ToPort: 65535

  ControlPlaneSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    DependsOn: NodeSecurityGroup
    Properties:
      Description: Allow pods to communicate with the cluster API Server
      GroupId: !Ref ControlPlaneSecurityGroup
      SourceSecurityGroupId: !Ref NodeSecurityGroup
      IpProtocol: tcp
      ToPort: 443
      FromPort: 443

  NodeSecurityGroupFromControlPlaneOn443Ingress:
    Type: AWS::EC2::SecurityGroupIngress
    DependsOn: NodeSecurityGroup
    Properties:
      Description: Allow pods running extension API servers on port 443 to receive communication from cluster control plane
      GroupId: !Ref NodeSecurityGroup
      SourceSecurityGroupId: !Ref ControlPlaneSecurityGroup
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443

  ControlPlaneEgressToNodeSecurityGroupOn443:
    Type: AWS::EC2::SecurityGroupEgress
    DependsOn: NodeSecurityGroup
    Properties:
      Description: Allow the cluster control plane to communicate with pods running extension API servers on port 443
      GroupId: !Ref ControlPlaneSecurityGroup
      DestinationSecurityGroupId: !Ref NodeSecurityGroup
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443

  NodeToDataIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      FromPort: '5432'
      ToPort: '5432'
      SourceSecurityGroupId:
        Fn::GetAtt:
        - NodeSecurityGroup
        - GroupId
      GroupId:
        Fn::GetAtt:
        - DataSecurityGroup
        - GroupId

Outputs:

  ControlPlaneSecurityGroup:
    Value: !Ref ControlPlaneSecurityGroup
    Export:
      Name: !Sub KubeCluster-ControlPlaneSecurityGroup-${ClusterName}

  NodeSecurityGroup:
    Value: !Ref NodeSecurityGroup
    Export:
      Name: !Sub KubeCluster-NodeSecurityGroup-${ClusterName}

  DataSecurityGroup:
    Value: !Ref DataSecurityGroup
    Export:
      Name: !Sub KubeCluster-DataSecurityGroup-${ClusterName}
